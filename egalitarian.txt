#const n=3.
%domain
manrank(1,2,2). %first man chooses second woman as his third choice.
manrank(1,1,1).
manrank(1,3,3).
manrank(2,1,3).
manrank(2,2,1).
manrank(2,3,2).
manrank(3,1,2).
manrank(3,2,3).
manrank(3,3,1).

womanrank(1,2,1).
womanrank(1,1,3).
womanrank(1,3,2).
womanrank(2,2,3).
womanrank(2,1,2).
womanrank(2,3,1).
womanrank(3,2,2).
womanrank(3,1,1).
womanrank(3,3,3).

man(1..n).
woman(1..n).
%generate
1{accept(M,W):woman(W)}1:-man(M).

%test - making it stable
:-2{accept(M,W):man(M)},woman(W).
:-accept(M,W'),manrank(M,W,S), manrank(M,W',S') ,S>S’, accept(M',W), womanrank(W,M,S), womanrank(W,M',S'), S > S’.

%reducing the total weight of preferences
  :~accept(M,W),manrank(M,W,I).[I@1,M,W]
  :~accept(M,W),womanrank(W,M,I).[I@1,M,W]

%display
#show accept/2.
